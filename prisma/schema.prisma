generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid()) @db.Uuid
  email           String           @unique @db.Citext
  slug            String           @unique @default(uuid()) @db.Uuid
  magicLinkTokens MagicLinkToken[]
  trackers        Tracker[]
}

model Tracker {
  id              String    @id @default(uuid()) @db.Uuid
  trackId         String    @unique @db.Uuid
  emailId         String    @unique @db.VarChar
  userId          String    @db.Uuid
  threadId        String    @db.VarChar
  createdAt       DateTime  @default(now()) @db.Timestamptz(6)
  emailSubject    String    @db.VarChar
  scheduledSendAt DateTime? @db.Timestamptz(6)
  user            User      @relation(fields: [userId], references: [id])
  views           View[]

  @@index([userId])
  @@index([userId, threadId])
}

model View {
  id          String   @id @default(uuid()) @db.Uuid
  clientIp    String   @db.VarChar
  userAgent   String
  trackId     String   @db.Uuid
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  clientIpGeo Json?
  tracker     Tracker  @relation(fields: [trackId], references: [trackId])

  @@index([createdAt])
  @@index([trackId])
}

model MagicLinkToken {
  id        String    @id @default(uuid()) @db.Uuid
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  token     String    @unique @default(uuid()) @db.Uuid
  userId    String    @db.Uuid
  expiresAt DateTime  @db.Timestamptz(6)
  usedAt    DateTime? @db.Timestamptz(6)
  user      User      @relation(fields: [userId], references: [id])
}
